はじめに
========

Swift Mailer は PHP アプリケーションからメールを送信するためのコンポーネントベースのライブラリです。

>**NOTE**
>この本は Swift Mailer ライブラリのバージョン 4.0 を参照しています。バージョン 3 (現在は廃止) の情報を探しているのであれば、[オンライン][1]で見つかる古いウィキを参照します。

この本の構成
------------

この本は、必要な情報を素早く見つけたい方、より高度なトピックを学びたい方がそれぞれの章をじっくり読めるように書きました。

この本は Swift Mailer の概要から始めます。何がパッケージに入っているのか、本の残りの部分を読むための準備をします。

このユーザーガイドを (最初から最後まで) ほかの本として読むこともできます。それぞれの章は含まれる内容の検討から始まり、効率よく始められるように設計された短いコードサンプルが続きます。章を読み進めるごとに Swift Mailer の機能を詳しく学びますが、学びたいトピックに真っ先に進むことができます。

この本を通してこの本はコードサンプルで表現されます。あなた独自のプロジェクトで Swift Mailer を適切に実装するためのサンプルが見つかります。適切な場所で読者の方が便利だと思ってくださるようなダイアグラムも使います。オンラインで見つけられるドキュメントの参照も含めて、関連する理論も検討します。

### コードサンプル

この本で表されるコードサンプルは異なる色の背景のなかで等幅フォントで表示されます。サンプルはコードスニペットをコピー＆ペーストできるようには書かれていません。

コードサンプルは何がテキストに書かれているのかを明らかにするために使われます。ときにはこれらはそのまま役に立ちますが、常に概要/擬似コードとしてのみ読みます。

コードのサンプルは次のようになります:

    [php]
    class AClass
    {
      ...
    }

    //A Comment
    $obj = new AClass($arg1, $arg2, ... );

    /* A note about another way of doing something
    $obj = AClass::newInstance($arg1, $arg2, ... );

    */

コードサンプルの 3 つのドット: `...` の存在は 簡潔性のためにコードの塊を省略していることを示しており、実際にはこれらはコードの一部ではありません。

同じ結果を得る別の方法を示すためにコードのなかに複数行のコメント: `/* ... */` を入れることがよくあります。

コードの例を理解するために読み試します。読者が情報量に圧倒されないようにこれらのコードは簡潔に保たれています。

Swift Mailer の歴史
-------------------

Swift Mailer の起源は 2005 年に SMTP を通してメールを送信するひとつのクラスのプロジェクトに遡ります。これが成長して今日開発されている柔軟なコンポーネントベースのライブラリになりました。

Chris Corbyn は最初にほかの開発者からのコメントをもらうために Web [フォーラム][2] で Swift Mailer を投稿しました。これは十分にサポートされるオープンソースのプロジェクトとして意図されたものではありませんでした。しかしフォーラムのメンバーがこれを採用し利用するようになりました。

ほかのたくさんの"明らかに"見つからない機能に加えて、真っ先に来た機能のリクエストは添付の追加と SMTP 認証を使う機能でした。唯一の代わりは PHPMailer でしたが、真新しいツールを表に出すのによい時期でした。Chris は、既存の単独クラスとは異なり、PHPMailer によるレガシーな PHP 4 のアプローチではなく、よりコンポーネントベースかつ PHP 5 のアプローチで作業を始めました。

フォーラムのメンバーは Chris がこのプロジェクトで取り組んだコードにたくさんのアドバイスと批評を提供し、2005 年と 2006 年にライブラリのバージョン 2 と 3 がリリースされました。より小さなクラスに解体されより柔軟性がありプラグインをサポートするようになりました。この日までに Swift Mailer チームはフォーラムとメールの両方でユーザーからのたくさんの機能リクエストを受け取ります。

2008 年まで Chris は Swift Mailer の唯一の開発者でしたが、2009 年に入り 2人の経験のあり彼がよく知っている 2 人の開発者: Paul Annesley と Christopher Thompson のサポートを得ました。これは熱烈に歓迎される変更でした。

2009 年 9 月に、Chris は Swift Mailer のメンテナンスを Fabien Potencier に譲りました。

Now 2009 年に Swift Mailer の 4 番目のメージャーバージョンはユーザービリティの観点と開発の観点の両方からこれまで以上にオブジェクト指向で柔軟です。

Swift Mailer は"終わった"と呼ぶ状態にはけっしてありません。背後で行われるリファクタリングに加えてライブラリに追加できる機能はまだたくさんあります。

これらはライブラリです！
-----------------------

Swift Mailer はアプリケーションではありません - これらはライブラリです。

多くの経験を積んだ開発者には、これは明らかなものでしょうが、説明する価値があります。多くの人が Swift Mailer の存在理由の観点から完全に間違った指摘をします。

これはアプリケーションではありません。これはグラフィカルユーザーインターフェイスを持ちません。これは Web ブラウザーで直接開くことはできません。

これはライブラリ (もしくはフレームワーク) です。これはとても複雑なことをしなくて済むようにするたくさんのクラスを提供します。アプリケーションがメールを送信する機能を持てるようにアプリケーションのなかで Swift Mailer を"使い"ます。

ライブラリのコンポーネントベースの構造は異なる方法で自由に実装できるのと使いたいものを選び出せることを意味します。

一方でアプリケーションは (ブログもしくはフォーラム) はすでに特定の方法で "組み立てられ"、(通常は) グラフィカルユーザーインターフェイスを提供したいがいはあなた独自のアプリケーションとの大きな統合は提供しません。

ライブラリの構造を尊重しこれが利点を提供するコンポーネントを使ってください。やみくもに既存のコードをコピー＆ペーストするよりも、コンポーネントが何を行うのか学ぶことで強力なアプリケーションを構築するための大きな力になります！

[1]: http://swiftmailer.org/wikidocs/
[2]: http://forums.devnetwork.net/
